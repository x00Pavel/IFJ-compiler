<prog> -> EOF
<prog> -> ID = <value/func/expr> EOL <prog>
<prog> -> FNC ( <arg> <arg_mb> ) EOL <prog>
<prog> -> if <cond_mb> : EOL INDENT <prog> DEDENT <prog>
<prog> -> return <mb_ret> EOL
<prog> -> while <cond_mb> : EOL INDENT <prog> DEDENT <prog>
<prog> -> else : EOL INDENT <prog> DEDENT <prog>
<prog> -> def FNC ( <arg> <arg_mb> ) : EOL INDENT <prog> DEDENT <prog>
<prog> -> EOL <prog>
<prog> -> e
<prog> -> pass EOL <prog>
<cond_mb> -> ( <cond_mb> )
<cond_mb> -> <func/expr>
<mb_ret> -> None
<mb_ret> -> <func/expr>
<func/expr> -> FNC ( <arg> <arg_mb> )
<func/expr> -> <expr>
<value/func/expr> -> <expr>
<value/func/expr> -> FNC ( <arg> <arg_mb> )
<value/func/expr> -> None
<i/f/s> -> int
<i/f/s> -> float
<i/f/s> -> string
<arg> -> e
<arg> -> ID
<arg> -> <i/f/s>
<arg_mb> -> ,<arg> <arg_mb>
<arg_mb> -> e